gruvboxr::install_theme()
remotes::install_github("tallguyjenks/gruvboxr")
install_github("tallguyjenks/gruvboxr")
gruvboxr::install_theme()
require(ppclust)
install.packages("stringi")
plot(cars)
remotes::install_github("tallguyjenks/gruvboxr")
install.packages("remotes")
remotes::install_github("tallguyjenks/gruvboxr")
gruvboxr::install_theme()
install.packages("readxl")
head(DBDdata)
DBDData <- read.csv(file = 'DatasetClustering-DBD.csv')
head(DBDdata)
DBDData <- read.csv(file = 'DatasetClustering-DBD.csv')
head(DBDdata)
print(getwd())
print(setwd(/tugas))
print(setwd("/Tugas/Data Science"))
setwd("~/Tugas/Data Science")
print(setwd("/Tugas/Data Science"))
DBDData <- read.csv(file = 'DatasetClustering-DBD.csv')
head(DBDdata)
getwd()
DBDData <- read.csv(file = "DatasetClustering-DBD.csv")
head(DBDdata)
DBDData <- read.csv(file = "DatasetClustering-DBD.csv")
print(DBDdata)
DBDData <- read.csv(file = "dataset.csv")
print(DBDdata)
DBDData <- read.csv(file = "dataset.csv")
print(DBDData)
head(DBDData)
DBDData <- read.csv(file = "dataset.csv", sep = ";")
head(DBDData)
library(dplyr)
install.packages("dplyr")
library(dplyr)
identifier = select(DBDData, Kecamatan , Kelurahan , Kode.Kel, Kelas_Endemis)
head(identifier)
DBDData <- DBDData[-c(1)]
head(DBDData)
DBDData <- DBDData[-c(1,2,3,23)]
head(DBDData)
install.packages("ppclust")
install.packages("factoextra")
install.packages("ggplot2")
install.packages("cluster")
install.packages("fclust")
install.packages("psych")
cor(DBDData[,1:71])
pairs(DBDData , col=DBDData[,5])
par(mar=c(1,1,1,1))
pairs(DBDData , col=DBDData[,5])
par(mar=c(1,1,1,1))
pairs(DBDData , col=DBDData[,5])
dev.off()
pairs(DBDData , col=DBDData[,5])
res.fcm <- fcm(DBDData, centers=7)
library(ppclust)
res.fcm <- fcm(DBDData, centers=7)
DBDData <- DBDData[-c(-2,-3)]
head(DBDData)
DBDData <- read.csv(file = "dataset.csv", sep = ";")
head(DBDData)
library(dplyr)
identifier = select(DBDData, Kecamatan , Kelurahan , Kode.Kel, Kelas_Endemis)
head(identifier)
DBDData <- DBDData[-c(1,2,3,4,24)]
head(DBDData)
DBDData <- DBDData[-c(70,69)]
head(DBDData)
DBDData[is.na(DBDData)] <- 0
library(ppclust)
res.fcm <- fcm(DBDData, centers=7)
as.data.frame(res.fcm$u)[1:6,]
res.fcm$v0
res.fcm$v
summary(res.fcm)
View(res.fcm)
sink("summary.txt")
print(summary(res.fcm))
sink()  # returns output to the console
res.fcm2 <- ppclust2(res.fcm, "kmeans")
fviz_cluster(res.fcm2, data = x,
ellipse.type = "convex",
palette = "jco",
repel = TRUE)
library(ppclust2)
library(ppclust)
res.fcm2 <- ppclust2(res.fcm, "kmeans")
fviz_cluster(res.fcm2, data = x,
ellipse.type = "convex",
palette = "jco",
repel = TRUE)
require(ppclust)
require(cluster)
require(fclust)
res.fcm2 <- ppclust2(res.fcm, "kmeans")
fviz_cluster(res.fcm2, data = x,
ellipse.type = "convex",
palette = "jco",
repel = TRUE)
require(ppclust)
require(cluster)
require(fclust)
require(factoextra)
res.fcm2 <- ppclust2(res.fcm, "kmeans")
fviz_cluster(res.fcm2, data = x,
ellipse.type = "convex",
palette = "jco",
repel = TRUE)
require(ppclust)
require(cluster)
require(fclust)
require(factoextra)
res.fcm2 <- ppclust2(res.fcm, "kmeans")
fviz_cluster(res.fcm2, data = DBDData,
ellipse.type = "convex",
palette = "jco",
repel = TRUE)
require(ppclust)
require(cluster)
require(fclust)
require(factoextra)
res.fcm2 <- ppclust2(res.fcm, "kmeans")
fviz_cluster(res.fcm, data = DBDData,
ellipse.type = "convex",
palette = "jco",
repel = TRUE)
require(ppclust)
require(cluster)
require(fclust)
require(factoextra)
res.fcm3 <- ppclust2(res.fcm, "fanny")
cluster::clusplot(scale(x), res.fcm3$cluster,
main = "Cluster plot of Iris data set",
color=TRUE, labels = 2, lines = 2, cex=1)
require(ppclust)
require(cluster)
require(fclust)
require(factoextra)
res.fcm3 <- ppclust2(res.fcm, "fanny")
cluster::clusplot(scale(DBDData), res.fcm3$cluster,
main = "Cluster plot of Iris data set",
color=TRUE, labels = 2, lines = 2, cex=1)
cluster::clusplot(scale(DBDData), res.fcm3$cluster,
main = "Cluster plot of Iris data set",
color=TRUE, lines = 0)
res.fcm2 <- ppclust2(res.fcm, "kmeans")
fviz_cluster(res.fcm2, data = x,
ellipse.type = "convex",
palette = "jco",
repel = TRUE)
res.fcm2 <- ppclust2(res.fcm, "kmeans")
fviz_cluster(res.fcm2, data = DBDData,
ellipse.type = "convex",
palette = "jco",
repel = TRUE)
summary(DBDData)
DBDData <- DBDData[-c(7,9,11,13)]
res.fcm2 <- ppclust2(res.fcm, "kmeans")
fviz_cluster(res.fcm2, data = DBDData,
ellipse.type = "convex",
palette = "jco",
repel = TRUE)
summary(DBDData)
DBDData <- DBDData[-c(37)]
res.fcm2 <- ppclust2(res.fcm, "kmeans")
fviz_cluster(res.fcm2, data = DBDData,
ellipse.type = "convex",
palette = "jco",
repel = TRUE)
res.fcm2 <- ppclust2(res.fcm, "kmeans")
fviz_cluster(res.fcm2, data = DBDData,
ellipse.type = "convex",
palette = "jco",
repel = TRUE,  max.overlaps = Inf)
res.fcm2 <- ppclust2(res.fcm, "kmeans")
fviz_cluster(res.fcm2, data = DBDData,
ellipse.type = "convex",
palette = "jco",
repel = TRUE, max.overlaps = 250)
options(ggrepel.max.overlaps = Inf)
res.fcm2 <- ppclust2(res.fcm, "kmeans")
fviz_cluster(res.fcm2, data = DBDData,
ellipse.type = "convex",
palette = "jco",
repel = TRUE)
options(ggrepel.max.overlaps = 10)
res.fcm3 <- ppclust2(res.fcm, "fanny")
cluster::clusplot(scale(x), res.fcm3$cluster,
main = "Cluster plot of Iris data set",
color=TRUE, labels = 2, lines = 2, cex=1)
res.fcm3 <- ppclust2(res.fcm, "fanny")
cluster::clusplot(scale(DBDData), res.fcm3$cluster,
main = "Cluster plot of Iris data set",
color=TRUE, labels = 2, lines = 2, cex=1)
res.fcm3 <- ppclust2(res.fcm, "fanny")
cluster::clusplot(scale(DBDData), res.fcm3$cluster,
main = "Cluster plot of Iris data set",
color=TRUE, labels = 2, lines = 2, cex=1,geom="point")
res.fcm3 <- ppclust2(res.fcm, "fanny")
cluster::clusplot(scale(DBDData), res.fcm3$cluster,
main = "Cluster plot of Iris data set",
color=TRUE, lines = 2, cex=1)
res.fcm4 <- ppclust2(res.fcm, "fclust")
# Fuzzy Silhouette Index:
idxsf <- SIL.F(res.fcm4$Xca, res.fcm4$U, alpha=1)
paste("Fuzzy Silhouette Index: ",idxsf)
# Partition Entropy:
idxsf <- PE(res.fcm4$U)
paste("Partition Entropy: ",idxsf)
# Partition Coefficient:
idxpc <- PC(res.fcm4$U)
paste("Partition Coefficient : ",idxpc)
idxmpc <- MPC(res.fcm4$U)
paste("Modified Partition Coefficient :",idxmpc)
